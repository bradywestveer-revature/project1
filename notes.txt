FRONTEND
	filter dropdown, None, Pending, Approved, Denied
		on filter:
			clear requests children, then:
			
			None
				sort by submitted date most recent at the top, then sort by status, pending or not pending
			Pending
				show only pending, sort by submitted date most recent at the top
			Approved
				show only approved, sort by submitted date most recent at the top
			Denied
				show only approved, sort by submitted date most recent at the top
	
	create request
		only show if role is EMPLOYEE
		inputs for amount, type, and description in that order, and submit button
			onclick, fetch POST /api/requests
				{
					"type": ...
					"amount": ...
					"description": ...
				}
			clear request elements (might have to wait for db to update?)
			get requests again
	
	update request
		approveButton.onclick
			fetch PUT /api/requests
				{
					"id": ...,
					"approve": true
				}
				clear request elements (might have to wait for db to update?)
				get requests again
		denyButton.onclick
			fetch PUT /api/requests
				{
					"id": ...,
					"approve": false
				}
				clear request elements (might have to wait for db to update?)
				get requests again
	
	show error messages to user

tests

selenium automation
	employee logs in and creates new request

add database table constraints to service layer

optional stuff
	add mvn build system
	deploy to ec2
	hash passwords
	allow receipts
	email notifications
	selenium testing
	pagination?

extra stuff

//todos

intellij cleanup code

don't send context.json after context.redirect? doesn't do anything?